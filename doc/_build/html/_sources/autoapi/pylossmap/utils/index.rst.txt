:mod:`pylossmap.utils`
======================

.. py:module:: pylossmap.utils


Module Contents
---------------


.. function:: tqdm(iterable, *args, **kwargs)


.. data:: DB
   

   

.. data:: BEAM_META
   

   

.. data:: ADT_META
   

   

.. function:: uniquify(iterable)

   Makes the entries in a list unique.

   :param iterable: list to uniquify, duplicates will have
                    "_{number}" added to them.
   :type iterable: Iterable

   :Yields: *str* -- uniquified element of iterable


.. function:: to_datetime(ts)

   Epoch time to datetime.

   :param ts: Epoch or Unix time.
   :type ts: int/float

   :returns: pd.Timestamp instance in Europe/Zurich timezone.
   :rtype: pd.Timestamp


.. function:: fill_from_time(t, fuzzy_t='12H')

   Gets the machine fill of a timestamp.

   :param t: Epoch/Unix time or timestamp string.
   :type t: int/float/str
   :param fuzzy_t: pd.Timedelta format string. Controls the
                   look back and look forward around "t" when
                   looking for the fill.
   :type fuzzy_t: str, optional

   :returns: dict containing the start/end time of the fill and
             with beam mode info.
   :rtype: dict

   :raises ValueError: if not fill is found.


.. function:: beammode_from_time(t, fill=None, **kwargs)


.. function:: beammode_to_df(beam_mode, subset='all', unique_subset=False)


.. function:: row_from_time(data, t, flatten=False, **kwargs)


.. function:: coll_meta(augment_b2=True)


.. function:: angle_convert(angle)


.. function:: get_ADT(t1, t2, planes=['H', 'V'], beams=[1, 2], include=['amp', 'length', 'trigger'])

   Gets ADT blowup trigger data for the requested time interval,
   beam and plane.

   :param t1: start of interval.
   :type t1: Datetime
   :param t2: end of interval.
   :type t2: Datetime
   :param planes: requested planes.
   :type planes: list, optional
   :param beams: requested beams.
   :type beams: list, optional
   :param include: list of ADT metrcis to fetch from timber.
   :type include: list, optional
   :param Must be a key of ADT_META.:

   :returns: DataFrame as index the timestamp and columns the
             triggers of the beams/planes.
   :rtype: DataFrame


.. function:: sanitize_t(t)


.. py:class:: PBar(iterable, **kwargs)

   .. attribute:: use_tqdm
      :annotation: = True

      

   .. attribute:: mute
      :annotation: = False

      

   .. method:: set_description(self, string)




