:mod:`pylossmap.data`
=====================

.. py:module:: pylossmap.data


Module Contents
---------------


.. py:class:: BLMData(data, meta, BLM_filter='BLM[Q|B|A|T|2|E]I.*', context=None)

   .. method:: find_max(self, BLM_max=None)


      Finds the max timestamp and chunk in which the max occured.

      :param BLM_max: List of BLMs, defaults to the primary
                      blms in IR 7.
      :type BLM_max: list, optional

      :returns: DataFrame containing a tuple: (mode, datetime).
      :rtype: DataFrame


   .. method:: iter_max(self, BLM_max=None)


      Creates an generator of ((mode, datetime), BLM_max), where mode and
      datetime correspond to the max value of BLM_max.

      :param BLM_max: List of BLMs, defaults to the primary
                      blms in IR 7.
      :type BLM_max: list, optional

      :returns: ((mode, datetime), BLM_max)
      :rtype: generator

      .. rubric:: Examples

      BLM_data = BLMData(data, meta)
      for idx, blms in BLM_date.iter_max():
         row = BLM_data.loc[idx]


   .. method:: loss_map(self, datetime=None, row=None, context=None, background=None, **kwargs)


      Creates a LossMap instance.

      :param datetime: If provided, is used to find a desired row in the data which corresponds to datetime.
      :type datetime: Datetime, optional
      :param row: Row of data for which to create the LossMap
                  instance.
      :type row: Series, optional
      :param context: if None, will use self.context.
      :type context: optional
      :param background: if provided will create a LossMap instance for the background and will link it to the data's LossMap.
      :type background: Series, optional
      :param \*\*kwargs: passed to LossMap.__init__.

      :returns: LossMap instance of the desired data.
      :rtype: LossMap

      :raises ValueError: If neither t nor row is provided.


   .. method:: save(self, file_path)


      Save the DataFrames to hdf file/keys.

      :param file_path: Path to hdf file in which to save the
                        DataFrames.
      :type file_path: str/path

      :raises OSError: If file already exists.


   .. method:: plot(self, data=None, title=None, **kwargs)


      Plots a waterfall plot of the data. Note, will produce multiple
      figures if data contains a mode index.

      :param data: DataFrame containing the BLM data.
      :type data: DataFrame, optional
      :param title: figure title, '{mode}' gets replaced with
                    the beam mode.
      :type title: str, optional
      :param \*\*kwargs: passed to plotting.plot_waterfall



.. function:: load(file_path, **kwargs)

   Load the data from a hdf file and create a LossMapData instance.

   :param file_path: Path to hdf file from which to load the data.
   :type file_path: str/path

   :returns: LossMapData instance with the loaded data.
   :rtype: LossMapData

   :raises FileNotFoundError: If file does not exist.


